How to Install Madara on your system (must be done on each host)

    * Latest Version
    * Introduction
    * Prerequisites
          o ACE
                + ACE download and install (Linux)
                + ACE download and install (Windows)
          o Open Splice Community Edition
                + Windows
    * Installing Madara
          o Downloading the source
          o Set environment variables
          o Generate the Madara project for your system
          o Compiling the Madara library on your system
    * Validating Installation


========================================================
0. Latest Version

  This file may not be up-to-date.

  Please see http://sourceforge.net/p/madara/wiki/InstallationFromSource/
  for the latest version of this document.

========================================================
1. Introduction

This page shows you how to install the Madara libraries on your system. 
At this point we do not provide binaries for each system, so you will have
to compile the Madara library for your particular architecture.


========================================================
2. Prerequisites

You will need to download ACE and the associated MPC program (which is used
to generate Visual Studio workspaces or GNU makefiles for the Madara source
code).

For the purposes of this document, the directory you want to install all
required libraries will be referred to as $MY_INSTALL_DIR on Linux and
%MY_INSTALL_DIR% on Windows

ACE
--------------------------------
ACE download and install (Linux)


  * Set environment variables
      export ACE_ROOT=$MY_INSTALL_DIR/ACE_wrappers
      export TAO_ROOT=$ACE_ROOT/TAO
      export LD_LIBRARY_PATH=$ACE_ROOT/lib:$TAO_ROOT/lib:$LD_LIBRARY_PATH 
      export PATH=$ACE_ROOT/bin:$TAO_ROOT/bin:$PATH

  * Downloading ACE+TAO+CIA
      svn co svn://svn.dre.vanderbilt.edu/DOC/Middleware/sets-anon/ACE+TAO+CIAO $MY_INSTALL_DIR/ace

  * Configuring and Generating Makefiles
      cd $ACE_ROOT/ace
      echo "#include \"ace/config-linux.h\"" > config.h
      cd $ACE_ROOT/include/makeinclude
      echo "include \$(ACE_ROOT)/include/makeinclude/platform_linux.GNU" > platform_macros.GNU
      cd $TAO_ROOT
      $ACE_ROOT/bin/mwc.pl -type gnuace TAO_ACE.mwc
      make

--------------------------------
ACE download and install (Windows)

  * Set environment variables
      ACE_ROOT=%MY_INSTALL_DIR%\ace\ACE_wrappers
      TAO_ROOT=$ACE_ROOT\TAO
      PATH=%ACE_ROOT%\lib;%TAO_ROOT%\lib;%ACE_ROOT%\bin;%TAO_ROOT%\bin;%PATH%

  * Downloading ACE+TAO+CIA
      svn co svn://svn.dre.vanderbilt.edu/DOC/Middleware/sets-anon/ACE+TAO+CIAO %MY_INSTALL_DIR%\ace

  * Configuring and Generating VS Solutions
      cd %ACE_ROOT%\ace
      echo "#include \"ace/config-win32.h\"" > config.h
      cd %TAO_ROOT%

    -- if using Visual Studio 2005
       %ACE_ROOT%/bin/mwc.pl -type vc8 TAO_ACE.mwc

    -- if using Visual Studio 2008
       %ACE_ROOT%/bin/mwc.pl -type vc9 TAO_ACE.mwc

    -- if using Visual Studio 2010
       %ACE_ROOT%/bin/mwc.pl -type vc10 TAO_ACE.mwc

  * Open your Visual Studio solution (TAO_ACE.sln) and build the solution.


Open Splice Community Edition
--------------------------------

  NOTE: INSTALLING OPEN SPLICE IS NOT REQUIRED. IF YOU WOULD LIKE TO JUST USE THE
  BUILT-IN IP-BASED TRANSPORTS, THAT IS PERFECTLY FINE. PROCEED WITH THIS SECTION
  ONLY IF YOU WOULD LIKE TO INSTALL DDS AS A TRANSPORT OPTION.

Linux

  First, go ahead and setup the environment variables in your ~/.profile file 
  or wherever your operating system loads your environment variables from.

    export OSPL_HOME=$MY_INSTALL_DIR/splice/HDE/x86.linux2.6
    export OSPL_TARGET=x86.linux2.6
    export OSPL_TMPL_PATH=$OSPL_HOME/etc/idlpp
    export OSPL_URI=file://$OSPL_HOME/etc/config/ospl.xml

    export LD_LIBRARY_PATH=$OSPL_HOME/lib:$LD_LIBRARY_PATH
    export PATH=$OSPL_HOME/bin:$PATH

  The following commands extract the Open Splice download to the $MY_INSTALL_DIR/splice 
  directory. Feel free to change this to whatever location you'd like splice to reside at:

    cd $MY_INSTALL_DIR
    wget http://www.opensplice.org/releases/downloads/releases/OpenSpliceDDSV5.2-x86.linux2.6-gcc344-gnuc23-HDE.tar.gz
    mkdir $MY_INSTALL_DIR/splice
    cd $MY_INSTALL_DIR/splice
    tar xvf OpenSpliceDDSV5.2-x86.linux2.6-gcc344-gnuc23-HDE.tar.gz

Windows

  * Download http://code.google.com/p/madara/downloads/detail?name=opensplice_community.zip
  * Unzip the file to %MY_INSTALL_DIR%
  * Set the following environment variables

     OSPL_HOME=%MY_INSTALL_DIR%\Splice\HDE\x86.win32
     OSPL_TARGET=x86.win32
     OSPL_TMPL_PATH=%OSPL_HOME%\etc\idlpp
     OSPL_URI=file://%OSPL_HOME%\etc\config\ospl.xml
     PATH=%OSPL_HOME%\bin;%OSPL_HOME%\lib;%PATH%

     The zip file contains all the compiled libraries you will need on Windows


========================================================
3. Installing Madara
---------------------------------------
Downloading the source

  * Download Madara to $MY_INSTALL_DIR/madara on a Linux box
      git clone git://git.code.sf.net/p/madara/code $MY_INSTALL_DIR/madara

  * Download Madara to %MY_INSTALL_DIR%\madara on a Windows box
      svn checkout http://madara.googlecode.com/svn/trunk/ %MY_INSTALL_DIR%\madara

---------------------------------------
Set environment variables

  * First, make sure you setup ACE on your system and follow the installation
    notes for setting environment variables for ACE.
  * Next, set the following environment variable for Madara:

    -- Linux 
         export MADARA_ROOT=$MY_INSTALL_DIR/madara
         export LD_LIBRARY_PATH=$MADARA_ROOT/lib:$LD_LIBRARY_PATH
         export PATH=$MADARA_ROOT/bin:$PATH

    -- Windows 
         MADARA_ROOT=%MY_INSTALL_DIR%\madara\code
         PATH=%MADARA_ROOT%\lib;%MADARA_ROOT%\bin;%PATH%

---------------------------------------
Generate the Madara project for your system

  * Linux
      cd $MADARA_ROOT
      mwc.pl -type gnuace MADARA.mwc 

  * Windows
      cd $MADARA_ROOT
      mwc.pl -type vc9 MADARA.mwc

---------------------------------------
Compiling the Madara library on your system

  * Linux
      cd $MADARA_ROOT
      make tests=1

  * Windows
      cd $MADARA_ROOT
      open the Madara.sln solution file
      Compile the Visual Studio solution 

========================================================
3. Validating Installation
---------------------------------------

Check MADARA version from a command prompt. If this prints out version
information, then the library has been installed successfully.

  $> madara_version

